import LeadingArticle from '@/components/LeadingArticle'
import NavBar from '@/components/NavBar'
import NewArticles from '@/components/NewArticles'
import PopularArticles from '@/components/PopularArticles'
import { articleRepository } from '@/database/articleRepository'
import { useLeadingArticle } from '@/hooks/useLeadingArticle'
import { useNewArticles } from '@/hooks/useNewArticles'
import { usePopularArticles } from '@/hooks/usePopularArticles'
import styles from '@/styles/Home.module.scss'
import { Article } from '@/types/Article'
import { NewArticle } from '@/types/NewArticle'
import { GetServerSideProps } from 'next'
import Head from 'next/head'
import { useEffect, useMemo } from 'react'

interface Props {
  leadingArticle?: Article
  newArticles?: NewArticle[]
  popularArticles?: Article[]
}

export default function Home(props: Props) {
  const { fetchingLeadingArticle, fetchLeadingArticle, leadingArticle } =
    useLeadingArticle({ leadingArticle: props.leadingArticle })

  const { fetchingNewArticles, newArticles, fetchNewArticles } = useNewArticles(
    { newArticles: props.newArticles },
  )

  const { popularArticles, fetchingPopularArticles, fetchPopularArticles } =
    usePopularArticles({
      popularArticles: props.popularArticles,
    })

  const isFetching = useMemo(
    () =>
      [
        fetchingLeadingArticle,
        fetchingNewArticles,
        fetchingPopularArticles,
      ].some((v) => v),
    [fetchingLeadingArticle, fetchingNewArticles, fetchingPopularArticles],
  )

  useEffect(() => {
    ;(async () => {
      await Promise.all([
        fetchLeadingArticle(),
        fetchNewArticles(),
        fetchPopularArticles(),
      ])
    })()
  }, [])

  if (isFetching) {
    return null
  }

  return (
    <>
      <Head>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="favicon-32x32.png"
        />
        <title>Frontend Mentor | News homepage</title>
      </Head>
      <main className={styles.home}>
        <div className={styles.content}>
          <NavBar />
          <LeadingArticle article={leadingArticle} />
          <NewArticles newArticles={newArticles} />
          <PopularArticles populateArticles={popularArticles} />
        </div>
      </main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const leadingArticle = await articleRepository.getLeadingArticle()
  const newArticles = await articleRepository.getNewArticles()

  return {
    props: {
      leadingArticle,
      newArticles,
    },
  }
}
